pipeline {
    
    agent any

    environment {
        ENV_FILE = '.env'
        DOCKER_IMAGE = 'g3n1k/my-rust-app:latest'
        DOCKER_COMPOSE_PATH = '/home/g3n1k/workspace/rust'
    }

    triggers {
        githubPush() 
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone repository dari Git
                git branch: 'wfm-be', url: 'https://github.com/g3n1k/hello_cargo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker Image
                    //sh 'docker build -t my-rust-app .'
                    sh 'docker build --build-arg $(cat /var/jenkins_home/workspace/env/WFM-BE.env | xargs)'
                }
            }
        }

//        stage('Run Tests') {
//            steps {
//                script {
//                    // Jalankan container untuk test
//                    sh 'docker run --rm my-rust-app'
//                }
//            }
//        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'test-cicd-docker', 
                    usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        // Login ke Docker Hub
                        sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                        
                        // Tag dan push image
                        sh 'docker tag my-rust-app $DOCKER_USER/my-rust-app:latest'
                        sh 'docker push $DOCKER_USER/my-rust-app:latest'
                    }
                }
            }
        }

        stage('Pull Latest Docker Image') {
            steps {
                script {
                    // Login ke Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'test-cicd-docker', 
                        usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    }

                    // Pull image terbaru
                    sh "docker pull ${DOCKER_IMAGE}"
                }
            }
        }

//        stage('Restart Docker Compose') {
//            steps {
//                script {
//                    // Pindah ke direktori docker-compose.yml
//                    dir("${DOCKER_COMPOSE_PATH}") {
//                        // Restart Docker Compose
//                        sh """
//                        pwd
//                        ls -lh
//                        docker compose down
//                        docker compose up -d
//                        """
//                    }
//                }
//            }
//        }
    }

    post {
        success {
            echo 'Build and push completed successfully!'
        }
        failure {
            echo 'Build or push failed!'
        }
    }
}
